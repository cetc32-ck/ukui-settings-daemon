/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp usd-xrandr-manager.xml -a xrandr-adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "xrandr-adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include "clib-syslog.h"
/*
 * Implementation of adaptor class WaylandAdaptor
 */

WaylandAdaptor::WaylandAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

WaylandAdaptor::~WaylandAdaptor()
{
    // destructor
}

int WaylandAdaptor::height()
{
    // handle method call org.ukui.SettingsDaemon.wayland.height
    int out0;
    QMetaObject::invokeMethod(parent(), "height", Q_RETURN_ARG(int, out0));
    return out0;
}

int WaylandAdaptor::priScreenChanged(int x, int y, int width, int height, const QString &name)
{
    // handle method call org.ukui.SettingsDaemon.wayland.priScreenChanged
    int out0;
    QMetaObject::invokeMethod(parent(), "priScreenChanged", Q_RETURN_ARG(int, out0), Q_ARG(int, x), Q_ARG(int, y), Q_ARG(int, width), Q_ARG(int, height), Q_ARG(QString, name));
    return out0;
}

int WaylandAdaptor::setScreenMode(const QString &modeName, const QString &appName){
    int out0;
    USD_LOG(LOG_DEBUG,"change screen :%s, appName:%s",modeName.toLatin1().data(), appName.toLatin1().data());
    QMetaObject::invokeMethod(parent(), "setScreenMode", Q_RETURN_ARG(int, out0),  Q_ARG(QString, modeName),  Q_ARG(QString, appName));
    return out0;
}

QString WaylandAdaptor::priScreenName()
{
    // handle method call org.ukui.SettingsDaemon.wayland.priScreenName
    QString out0;
    QMetaObject::invokeMethod(parent(), "priScreenName", Q_RETURN_ARG(QString, out0));
    return out0;
}

double WaylandAdaptor::scale()
{
    // handle method call org.ukui.SettingsDaemon.wayland.scale
    double out0;
    QMetaObject::invokeMethod(parent(), "scale", Q_RETURN_ARG(double, out0));
    return out0;
}

int WaylandAdaptor::width()
{
    // handle method call org.ukui.SettingsDaemon.wayland.width
    int out0;
    QMetaObject::invokeMethod(parent(), "width", Q_RETURN_ARG(int, out0));
    return out0;
}

int WaylandAdaptor::x()
{
    // handle method call org.ukui.SettingsDaemon.wayland.x
    int out0;
    QMetaObject::invokeMethod(parent(), "x", Q_RETURN_ARG(int, out0));
    return out0;
}

int WaylandAdaptor::y()
{
    // handle method call org.ukui.SettingsDaemon.wayland.y
    int out0;
    QMetaObject::invokeMethod(parent(), "y", Q_RETURN_ARG(int, out0));
    return out0;
}

